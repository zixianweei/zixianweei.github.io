<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>C/C++ - 标签 - 阿先妙妙屋</title><link>https://zixianweei.github.io/tags/c/c++/</link><description>C/C++ - 标签 - 阿先妙妙屋</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>zixianwei@foxmail.com (zixianweei)</managingEditor><webMaster>zixianwei@foxmail.com (zixianweei)</webMaster><lastBuildDate>Fri, 08 Sep 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://zixianweei.github.io/tags/c/c++/" rel="self" type="application/rss+xml"/><item><title>C++中的placement new</title><link>https://zixianweei.github.io/placement-new/</link><pubDate>Fri, 08 Sep 2023 00:00:00 +0800</pubDate><author>zixianweei</author><guid>https://zixianweei.github.io/placement-new/</guid><description><![CDATA[<p>通常情况下，操作符<code>new</code>用于动态分类内存；并且所分配内存的生命周期将不受作用域管理<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>。与<code>malloc()</code>方法不同，操作符<code>new</code>会做两件事：分配内存；初始化对象。而<code>placement new</code>则是一种特殊的动态内存方法，其能够在已分配的内存空间上创建对象。因此，<code>placement new</code>只做了一件事：初始化对象。</p>]]></description></item></channel></rss>